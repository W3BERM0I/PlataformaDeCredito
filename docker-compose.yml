version: '3.7'

services:

  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app1
    restart: always
    ports:
      - 8001:80
      - 8443:443
    depends_on:
      - db
    volumes:
      - ./:/var/www/html
      - ./Docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app2
    restart: always
    ports:
      - 8002:80
      - 8444:443
    depends_on:
      - db
    volumes:
      - ./:/var/www/html
      - ./Docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  app3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app3
    restart: always
    ports:
      - 8003:80
      - 8445:443
    depends_on:
      - db
    volumes:
      - ./:/var/www/html
      - ./Docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:8.0.30
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: credeasy
      MYSQL_ROOT_PASSWORD: ROOT
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  haproxy:
    image: haproxy:lts
    container_name: haproxy
    ports:
      - "8000:80"
    volumes:
      - ./haproxy:/usr/local/etc/haproxy:ro
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
